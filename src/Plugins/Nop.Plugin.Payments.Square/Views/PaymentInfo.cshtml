@model Nop.Plugin.Payments.Square.Models.PaymentInfoModel
@{
    Layout = "";
}
@inject SquarePaymentSettings squarePaymentSettings
@inject Nop.Core.Domain.Orders.OrderSettings orderSettings

<style type="text/css">
    .square-input {
        height: 36px;
        border: 1px solid #ddd;
        padding: 8px;
        vertical-align: middle;
        color: #777;
    }

    select.square-input {
        width: 100%;
    }

    .square-input--focus {
        border-color: #ccc;
        color: #444;
    }

    .square-input--error {
        outline: #e4434b;
    }
</style>

<table width="100%" cellspacing="2" cellpadding="1" border="0">
    <tr>
        <td>
            <label asp-for="StoredCardId">@T("Plugins.Payments.Square.Fields.StoredCard"):</label>
        </td>
        <td>
            <select asp-for="StoredCardId" asp-items="Model.StoredCards" class="square-input"></select>
        </td>
    </tr>
</table>

<script type="text/javascript">
    $(document).ready(function () {
        $('#@Html.IdFor(model => model.StoredCardId)').change(toggleStoredCard);
        toggleStoredCard();

        var onePageCheckout = @orderSettings.OnePageCheckoutEnabled.ToString().ToLower();
        var submitForm = false;
        $('.payment-info-next-step-button').attr('onclick', null);

        $.getScript('https://js.squareup.com/v2/paymentform', function (data, textStatus, jqxhr) {
            var paymentForm = new SqPaymentForm({
                applicationId: '@squarePaymentSettings.ApplicationId',
                inputClass: 'square-input',
                inputStyles: [{
                    fontSize: '15px'
                }
                ],
                cardNumber: {
                    elementId: 'square-card-number',
                    placeholder: '•••• •••• •••• ••••'
                },
                expirationDate: {
                    elementId: 'square-expiration-date',
                    placeholder: 'MM/YY'
                },
                cvv: {
                    elementId: 'square-cvv',
                    placeholder: 'CVV'
                },
                postalCode: {
                    elementId: 'square-postal-code'
                },
                callbacks: {
                    //called when the SqPaymentForm completes a request to generate a card nonce, even if the request failed because of an error.
                    cardNonceResponseReceived: function (errors, nonce, cardData) {
                        if (errors) {
                            errors.forEach(function (error) {
                                var currentErrorvalue = $('#@Html.IdFor(model => model.Errors)').val();
                                $('#@Html.IdFor(model => model.Errors)').val(currentErrorvalue + '|' + error.message);
                            });
                        }
                        else {
                            $('#@Html.IdFor(model => model.CardNonce)').val(nonce);
                        }

                        paymentForm.destroy();
                        submitForm = true;
                        $('input.payment-info-next-step-button').click();
                    },

                    unsupportedBrowserDetected: function () {
                        console.log('Browser is not supported');
                    },

                    paymentFormLoaded: function () {
                        //setting the postal code field programmatically
                        paymentForm.setPostalCode('@Model.PostalCode');
                    }
                }
            });
            paymentForm.build();

            $('input.payment-info-next-step-button').on('click', function (data) {
                var selectedStoredCardId = $('#@Html.IdFor(model => model.StoredCardId)').val()
                if (!submitForm && (!selectedStoredCardId || selectedStoredCardId == '0')) {
                    if (submitForm == false) {
                        paymentForm.requestCardNonce();
                    }
                    return false;
                }
                else if (onePageCheckout) {
                    submitForm = null;
                    PaymentInfo.save();
                }
            });
        });
    });

    function toggleStoredCard() {
        var selectedStoredCardId = $('#@Html.IdFor(model => model.StoredCardId)').val();
        if (!selectedStoredCardId || selectedStoredCardId == '0') {
            $('#square-card-details').show();
        } else {
            $('#square-card-details').hide();
        }
    }
</script>

@*After the SqPaymentForm generates a card nonce, it's assigned as the value of this hidden input field.*@
<input type="hidden" asp-for="CardNonce">
<input type="hidden" asp-for="Errors">

@*These div elements are the placeholder elements that are replaced by the SqPaymentForm's iframes.*@
<table width="100%" cellspacing="2" cellpadding="1" border="0" id="square-card-details">
    <tr>
        <td>
            <label>@T("Payment.CardNumber"):</label>
        </td>
        <td>
            <div id="square-card-number" style="width:165px;"></div>
        </td>
    </tr>
    <tr>
        <td>
            <label>@T("Payment.ExpirationDate"):</label>
        </td>
        <td>
            <div id="square-expiration-date"></div>
        </td>
    </tr>
    <tr>
        <td>
            <label>@T("Payment.CardCode"):</label>
        </td>
        <td>
            <div id="square-cvv" style="width:60px;"></div>
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="PostalCode">@T("Plugins.Payments.Square.Fields.PostalCode"):</label>
        </td>
        <td>
            <div id="square-postal-code"></div>
        </td>
    </tr>
    <tr>
        <td>
            <label asp-for="SaveCard">@T("Plugins.Payments.Square.Fields.SaveCard"):</label>
        </td>
        <td>
            <input type="checkbox" asp-for="SaveCard" />
            <span asp-validation-for="SaveCard"></span>
        </td>
    </tr>
</table>